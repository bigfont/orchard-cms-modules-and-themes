@import '../Bootstrap/variables.less';
@import '../Bootstrap/grid.less';
@import '../Bootstrap/mixins.less';

/*
    - content must be within columns
    - columns must be within rows
    - avoid nesting containers
*/


/*container*/
#layout-wrapper {
    .container;
}

/*rows*/
#layout-wrapper,
[id$="-container"] {
    > .group {
        .make-row();
    }
}

#layout-footer.group > #footer {
    .make-md-column(12); // because the #layout-footer is a row
    .group {
        .make-row();
    }
}

/*default columns*/
#layout-wrapper > .group > div,
.zone-footer {
    .make-md-column(12);
}

/*[id^="aside"],
#footer-quad > div {
    .make-md-column(3);
}

#layout-content {
    .make-md-column(6);
}

#layout-tripel > div {
    .make-md-column(4);
}

#layout-main-container {
    .clearfix;
}*/

//
// Switches
// --------------------------------------------------

#layout-wrapper {
    /*switch: layout-main*/
    &.aside-12 {
        .zone-content {
            .make-md-column(6);
        }

        [id^="aside"] {
            .make-md-column(3);
        }
    }

    &.aside-1,
    &.aside-2 {
        .zone-content {
            .make-md-column(8);
        }

        [id^="aside"] {
            .make-md-column(4);
        }
    }
    /*switch: layout-tripel*/
    &.tripel-123 {
        #layout-tripel > div {
            .make-md-column(4);
        }
    }

    &.tripel-12,
    &.tripel-13,
    &.tripel-23 {
        #layout-tripel > div {
            .make-md-column(6);
        }
    }

    &.tripel-1,
    &.tripel-2,
    &.tripel-3 {
        #layout-tripel > div {
            .make-md-column(10);
            .make-md-column-offset(1);
        }
    }
    /*switch: footer-quad*/
    &.split-1234 {
    }

    &.split-123 {
    }

    &.split-12 {
    }
    // split-n
    .make-footer-quad-n-columns(@counter) when (@counter > 0) {
        .make-footer-quad-n-columns((@counter - 1));

        &.split-@{counter} {
            #footer-quad > div {
                .make-md-column(12);
            }
        }
    }

    .make-footer-quad-nn-columns(@counter) when (@counter > 0) {
        .make-footer-quad-nn-columns((@counter - 1));

        .inner(@inner) when (@counter < @inner) {
            .inner((@inner - 1));

            #hello-inner:before {
                content: @counter @inner;
            }

            &.split-@{counter}@{inner} {
                #footer-quad > div {
                    .make-md-column(6);
                }
            }
        }

        .inner(4);
    }

    .make-footer-quad-nn-columns(4); // launch the loop
    .make-footer-quad-n-columns(4); // launch the loop
}
