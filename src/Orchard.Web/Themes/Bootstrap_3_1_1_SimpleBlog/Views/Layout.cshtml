@{
    
    /* Responsive Design Metas
    ***************************************************************/
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    /* Global includes for the theme
    ***************************************************************/

    Script.Require("ShapesBase");

    Script.Include("//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js").AtHead().UseCondition("lt ie 9");
    Script.Include("//oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js").AtHead().UseCondition("lt ie 9");

    Style.Include("//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css");
    Style.Include("//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css");
    Style.Include("Site.css");
    Style.Include("APA-Style.css");

    /* Some useful shortcuts or settings
    ***************************************************************/

    // Zone as an alias for Display to help make it obvious when we're displaying zones
    Func<dynamic, dynamic> Zone = x => Display(x);

    /* Inserting some ad hoc shapes
    ***************************************************************/

    // Login and dashboard links
    WorkContext.Layout.Footer.Add(New.User(), "10");

    /* Last bit of code to prep the layout wrapper
    ***************************************************************/

    Model.Id = "layout-wrapper";

    // using Tag so the layout div gets the classes, id and other attributes added to the Model
    var tag = Tag(Model, "div");
}
@tag.StartElement

@*Header and Navbar*@
<header id="header" class="navbar navbar-default navbar-static-top">
    <div class="container">
        <div class="navbar-header">
            <a class="navbar-brand" href="/">@T("Muddling Thru")</a>
        </div>
    </div>
</header>

@*Main Content*@
<main id="main">
    <div class="container">
        <div class="row">

            <div class="col-md-2">

                @*Aside First*@
                @if (Model.AsideFirst != null) {
                    <aside id="aside-first">
                        @Zone(Model.AsideFirst)
                    </aside>
                }

            </div>

            <div class="col-md-10">

                @*Content*@
                <div id="content">
                    @Zone(Model.Content)
                </div>

            </div>
        </div>
    </div>
</main>

@*Footer*@
<footer id="footer">
    <div class="container">
        @if(Model.Footer != null) {
        <div id="footer-sig" class="group">
            @Zone(Model.Footer)
        </div>
        }
    </div>
</footer>

@tag.EndElement