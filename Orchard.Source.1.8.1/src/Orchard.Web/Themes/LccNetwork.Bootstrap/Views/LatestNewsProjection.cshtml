@using System.Dynamic;
@using System.Linq;
@using Orchard.ContentManagement;

@{
    var contentItems = Model.ContentItems;
    var cssClass = "latest-news-projection";
    List<dynamic> newsItems = new List<dynamic>();

    foreach (dynamic contentItem in contentItems)
    {
        dynamic newsItemPart = contentItem.NewsItem; // can we make this generic to whatever content type?
        dynamic newsItem = new ExpandoObject();

        // media library picker field
        var mediaPart =
            newsItemPart.Image != null &&
            newsItemPart.Image.MediaParts != null &&
            newsItemPart.Image.MediaParts.Count > 0 ? newsItemPart.Image.MediaParts[0] : null;
        newsItem.Img = new
        {
            Src = mediaPart != null ? mediaPart.MediaUrl : null,
            Alt = mediaPart != null ? mediaPart.AlternateText : null
        };
        ;
        // link fields - note: use internal links
        newsItem.Link = new
        {
            Value = Url.ItemDisplayUrl((IContent)contentItem), // newsItemPart.LearnMoreField.Value,
            Text = "View" // newsItemPart.LearnMoreField.Text
        };
        // simple fields
        newsItem.ShortTitle = newsItemPart.ShortTitle.Value;
        newsItem.Summary = newsItemPart.Summary.Value;
        // collect
        newsItems.Add(newsItem);
    }
}

<div class="@cssClass">

    <div class="row">
        @foreach (var item in newsItems)
        {
            //Keep in mind we have a grid with 24 columns
            <div class="col-md-6">
                <img src="@Display.ResizeMediaUrl(Width: 116, Height: 65, Mode: "crop", Alignment: "middlecenter", Path: item.Img.Src)">
                <h6>@item.ShortTitle</h6>
                <p>@item.Summary</p>
                <a href="@item.Link.Value">@item.Link.Text</a>
            </div>
        }
    </div>

</div>