@using Orchard.Taxonomies.Models
@using Orchard.ContentManagement;

@{
    // render childMenuItems recursively
    bool hasChildren = (Model.MenuItem.Items as ICollection<dynamic>).Any();
    if (hasChildren)
    {
        var childMenuItems = Enumerable.Cast<dynamic>(Model.MenuItem.Items);
        for (var i = 0; i < childMenuItems.Count; ++i)
        {
            var childMenuItem = childMenuItems[i];
            if (childMenuItem.Content is TermPart)
            {
                // hack - render taxonomy link menu text
                // see http://stackoverflow.com/questions/25732672/how-do-we-cause-orchard-to-render-a-taxonomy-links-menu-text
                var taxonomyName = childMenuItem.Content.Container.TaxonomyPart.Name;
                var termMenuItems = (childMenuItems as ICollection<dynamic>).Where(c => 
                    c.Content is TermPart && 
                    c.Content.Container.TaxonomyPart.Name.Equals(taxonomyName));
                i += termMenuItems.Count();
                @Display.TaxonomyLinkDropDown(TaxonomyName: taxonomyName, TermMenuItems: termMenuItems);
            }
            else
            {
                @Display.SectionMenuItem(MenuItem: childMenuItem, IsTopLevel: false)
                <ul>
                    @Display.SectionMenuItemChildren(MenuItem: childMenuItem, IsTopLevel: false)
                </ul>
            }
        }
    }
}
