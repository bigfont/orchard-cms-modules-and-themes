@using Orchard.ContentManagement;
@using LccNetwork.Bootstrap.Extensions;

@{
    var contentItems = Model.ContentItems;
    var carouselUniqueId = Guid.NewGuid().ToString();
    var items = new List<dynamic>();
    var processedWorkAreas = new List<string>();

    foreach (var contentItem in contentItems)
    {
        // work area
        dynamic workItemPart = contentItem.WorkItem;
        var workArea = workItemPart != null && workItemPart.Area != null && workItemPart.Area.Terms != null && workItemPart.Area.Terms.Count > 0 ? 
            workItemPart.Area.Terms[0] : null;
        
        // media part
        var mediaPart = MyFunctions.GetMediaPartFromMediaLibraryPickerField(workItemPart.Image);

        // create a bag of properties
        // consider refactoring this into a ViewModel
        var item = new
        {
            WorkArea = new
            {
                Term = workArea != null ? workArea.Name : string.Empty,
                Slug = workArea != null ? workArea.Slug : string.Empty

            },
            WorkItem = new
            {
                Summary = workItemPart != null && workItemPart.Summary != null ? workItemPart.Summary.Value : string.Empty,
                Slug = Url.ItemDisplayUrl((IContent)contentItem)
            },
            Img = new
            {
                Alt = mediaPart != null ? mediaPart.AlternateText : null,
                Src = mediaPart != null ? mediaPart.MediaUrl : null
            }
        };

        // ensure no properties are null
        if (item.WorkArea.Term == null || item.WorkArea.Slug == null || item.WorkItem.Summary == null ||
            item.WorkArea.Slug == null || item.Img.Alt == null || item.Img.Src == null)
        {
            continue;
        }

        // ensure that we only display one item per work area
        if (processedWorkAreas.Any(s => s.Equals(item.WorkArea.Term)))
        {
            continue;
        }

        processedWorkAreas.Add(item.WorkArea.Term);
        items.Add(item);
    }
}

<div id="@carouselUniqueId" class="carousel slide" data-ride="carousel">

    @* Note: We may tweak the indicator width and item width in CSS. *@
    @Display.CarouselIndicators(CarouselItems: items, CarouselId: carouselUniqueId, IndicatorWidth: 200)
    @Display.CarouselInner(CarouselItems: items, CarouselId: carouselUniqueId, ItemWidth: 735)

</div>